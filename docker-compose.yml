services:

  api:
    image: twitter_clone_api          # explicit image name
    build:
      context: .                      # must point at your project root
      dockerfile: docker/Dockerfile.api  # or 'Dockerfile' if you moved it up
    container_name: twitter_api
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: twitter_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: twitter_redis
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: {}
  redis_data: {}
